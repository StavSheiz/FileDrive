[{"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/index.tsx":"1","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/reportWebVitals.ts":"2","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/App.tsx":"3","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/user-service.ts":"4","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/SignUp.tsx":"5","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/Login.tsx":"6","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/FilesTree.tsx":"7","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-logic.ts":"8","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/tree-api.ts":"9","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMModalType.ts":"10","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/SideTree.tsx":"11","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/EditPermissionsModal.tsx":"12","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenu.tsx":"13","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-error-messages.ts":"14","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/api/login-api.ts":"15","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMExceptionCodes.ts":"16","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/appConfig.ts":"17","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/api/axios-request.ts":"18","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMPermissionType.ts":"19","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMUserType.ts":"20","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenuTrigger.tsx":"21","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-logic.ts":"22","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/consts/base-error-messages.ts":"23","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/log/logger.ts":"24","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/permissions-api.ts":"25","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-error-messages.ts":"26","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/CurrentTreeEntity.tsx":"27","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/AddTreeEntity.tsx":"28","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/helpers/tree-helpers.ts":"29","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/errors/ErrorContext.tsx":"30","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/DeleteEntityModal.tsx":"31","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/ValidationPopUp.tsx":"32","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/RenameEntityModal.tsx":"33","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/DetailsModal.tsx":"34"},{"size":619,"mtime":1610824846452,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1609179351665,"results":"37","hashOfConfig":"36"},{"size":1222,"mtime":1610826185691,"results":"38","hashOfConfig":"36"},{"size":435,"mtime":1610705276033,"results":"39","hashOfConfig":"36"},{"size":11044,"mtime":1610705276032,"results":"40","hashOfConfig":"36"},{"size":8888,"mtime":1610705276032,"results":"41","hashOfConfig":"36"},{"size":5256,"mtime":1614461780521,"results":"42","hashOfConfig":"36"},{"size":2754,"mtime":1614456816293,"results":"43","hashOfConfig":"36"},{"size":2048,"mtime":1614461769216,"results":"44","hashOfConfig":"36"},{"size":86,"mtime":1614456941571,"results":"45","hashOfConfig":"36"},{"size":2080,"mtime":1614456816292,"results":"46","hashOfConfig":"36"},{"size":9892,"mtime":1614456816293,"results":"47","hashOfConfig":"36"},{"size":2438,"mtime":1614456892139,"results":"48","hashOfConfig":"36"},{"size":601,"mtime":1610705276032,"results":"49","hashOfConfig":"36"},{"size":1266,"mtime":1610705276031,"results":"50","hashOfConfig":"36"},{"size":217,"mtime":1614456816291,"results":"51","hashOfConfig":"36"},{"size":66,"mtime":1610125000319,"results":"52","hashOfConfig":"36"},{"size":3152,"mtime":1614454910894,"results":"53","hashOfConfig":"36"},{"size":53,"mtime":1610705276027,"results":"54","hashOfConfig":"36"},{"size":50,"mtime":1610125000320,"results":"55","hashOfConfig":"36"},{"size":250,"mtime":1610705276029,"results":"56","hashOfConfig":"36"},{"size":3173,"mtime":1610705276031,"results":"57","hashOfConfig":"36"},{"size":309,"mtime":1610125000320,"results":"58","hashOfConfig":"36"},{"size":401,"mtime":1610125000322,"results":"59","hashOfConfig":"36"},{"size":2185,"mtime":1610705276027,"results":"60","hashOfConfig":"36"},{"size":138,"mtime":1610826129140,"results":"61","hashOfConfig":"36"},{"size":1987,"mtime":1614456816292,"results":"62","hashOfConfig":"36"},{"size":1524,"mtime":1610817287250,"results":"63","hashOfConfig":"36"},{"size":360,"mtime":1610815280468,"results":"64","hashOfConfig":"36"},{"size":1872,"mtime":1610826174621,"results":"65","hashOfConfig":"36"},{"size":1287,"mtime":1614461132463,"results":"66","hashOfConfig":"36"},{"size":822,"mtime":1614456613427,"results":"67","hashOfConfig":"36"},{"size":1472,"mtime":1614461466129,"results":"68","hashOfConfig":"36"},{"size":2339,"mtime":1614456816293,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"jkf0l2",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/index.tsx",[],["143","144"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/reportWebVitals.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/App.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/user-service.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/SignUp.tsx",["145"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { Typography, InputAdornment, IconButton, OutlinedInput, InputLabel, FormControl, Button, fade } from '@material-ui/core';\nimport { Visibility, VisibilityOff, Clear } from '@material-ui/icons/';\nimport logo from '../../logo.svg'\nimport { LoginLogic } from '../logic/login-logic';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\n\n\ntype ISignUpProps = RouteComponentProps & {\n    classes: ClassNameMap,\n    history: any\n}\ninterface ISignUpState {\n    password: string,\n    confirmPassword: string,\n    name: string,\n    showPassword: boolean,\n    showConfirmPassword: boolean,\n    errorMessage: string,\n    showErrorMessage: boolean\n}\n\nconst styles = (theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n    container: {\n        maxWidth: 400,\n        margin: `${theme.spacing(1)}px auto`,\n    },\n    loginPaper: {\n        padding: theme.spacing(4),\n    },\n    newAccountPaper: {\n        padding: theme.spacing(2),\n    },\n    signUpButton: {\n        backgroundColor: '#2c974b',\n        color: '#ffffff',\n        width: '100%'\n    },\n    logo: {\n        height: 48,\n        width: 48,\n        color: '#586069'\n    },\n    errorPaper: {\n        backgroundColor: fade('#cb2431', 0.5),\n        padding: theme.spacing(1),\n    }\n});\n\nclass SignUp extends React.Component<ISignUpProps, ISignUpState> {\n    state: ISignUpState = {\n        password: '',\n        confirmPassword: '',\n        name: '',\n        showPassword: false,\n        showConfirmPassword: false,\n        errorMessage: '',\n        showErrorMessage: false\n    }\n\n    handleClickShowPassword = (prop: 'showPassword' | 'showConfirmPassword') => () => {\n        this.setState({ ...this.state, [prop]: !this.state[prop] });\n    };\n\n    handleMouseDownPassword = (event: any) => {\n        event.preventDefault();\n    };\n\n    handleChange = (prop: string) => (event: any) => {\n        this.setState({ ...this.state, [prop]: event.target.value });\n    };\n\n    handleSignUp = async () => {\n        const { name, password, confirmPassword } = this.state;\n\n        const message = await LoginLogic.signUp(name, password, confirmPassword);\n\n        if (message) {\n            this.setState({ ...this.state, showErrorMessage: true, errorMessage: message, password: '', confirmPassword: '' });\n        } else {\n            this.props.history.push('/login');\n        }\n    }\n\n    handleClickCloseError = () => {\n        this.setState({ ...this.state, showErrorMessage: false, errorMessage: '' })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { password, confirmPassword, showPassword, showConfirmPassword, name, showErrorMessage, errorMessage } = this.state;\n\n        return (\n            <div>\n                <div className={classes.root}>\n                    <Grid container direction=\"column\" spacing={3} className={classes.container}>\n                        <Grid item>\n                            <img src={logo} className={classes.logo} />\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\">Sign Up to FileDrive</Typography>\n\n                        </Grid>\n                        {showErrorMessage &&\n                            <Grid item>\n                                <Paper className={classes.errorPaper}>\n                                    <Typography variant=\"body2\" className={classes.errorText}>{errorMessage}\n                                        <IconButton\n                                            onClick={this.handleClickCloseError}\n                                            onMouseDown={this.handleMouseDownPassword}\n                                            aria-label=\"close error message\"\n                                            edge=\"end\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                        }\n                        <Grid item>\n                            <Paper className={classes.loginPaper}>\n                                <Grid container direction=\"column\" spacing={3}>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n\n                                                    <InputLabel htmlFor=\"username-input\">Username</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('name')}\n                                                        label=\"Username\"\n                                                        id=\"username-input\"\n                                                        value={name}\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n                                                    <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('password')}\n                                                        label=\"Password\"\n                                                        id=\"password-input\"\n                                                        type={showPassword ? 'text' : 'password'}\n                                                        value={password}\n                                                        endAdornment={\n                                                            <InputAdornment position=\"end\">\n                                                                <IconButton\n                                                                    onClick={this.handleClickShowPassword('showPassword')}\n                                                                    onMouseDown={this.handleMouseDownPassword}\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n                                                    <InputLabel htmlFor=\"confirm-password-input\">Confrim password</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('confirmPassword')}\n                                                        label=\"Confirm password\"\n                                                        id=\"confirm-password-input\"\n                                                        type={showConfirmPassword ? 'text' : 'password'}\n                                                        value={confirmPassword}\n                                                        endAdornment={\n                                                            <InputAdornment position=\"end\">\n                                                                <IconButton\n                                                                    onClick={this.handleClickShowPassword('showConfirmPassword')}\n                                                                    onMouseDown={this.handleMouseDownPassword}\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            className={classes.signUpButton}\n                                            variant=\"contained\"\n                                            disableRipple\n                                            onClick={this.handleSignUp}\n                                        >Sign up</Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(SignUp));\n","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/Login.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/FilesTree.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-logic.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/tree-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMModalType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/SideTree.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/EditPermissionsModal.tsx",["146","147"],"import React from 'react';\nimport { Theme, withStyles, TableContainer, Table, TableHead, TableRow, TableCell, Paper, TableBody, IconButton, Select, MenuItem, Typography } from \"@material-ui/core\";\nimport { IBaseModalProps } from '../../interfaces/modal-interafaces';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { ITreeEntity } from '../../interfaces/ITreeEntity';\nimport { PermissionsLogic } from '../../logic/permissions-logic';\nimport { Permission } from '../../../models/Permission';\nimport { ENUMPermissionType } from '../../../enums/ENUMPermissionType';\nimport { Delete, Edit, Add, Clear } from '@material-ui/icons';\nimport { User } from '../../../models/User';\nimport { ENUMUserType } from '../../../enums/ENUMUserType';\nimport { UserService } from '../../../login/logic/user-service';\n\n\ninterface IEditPermissionsModalProps extends IBaseModalProps {\n    classes: ClassNameMap,\n    entity: ITreeEntity | null,\n    closeModal: () => void\n}\ninterface IEditPermissionsModalState {\n    permissions: Permission[],\n    users: User[],\n    errorMessage: string,\n    selectedUser: User | null,\n    selectedPermissionType: ENUMPermissionType,\n    showErrorMessage: boolean\n}\n\nconst styles = (theme: Theme) => ({\n    paper: {\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    errorPaper: {\n        backgroundColor: '#cb2431',\n        padding: theme.spacing(1),\n    }\n});\n\nclass EditPermissionsModal extends React.Component<IEditPermissionsModalProps, IEditPermissionsModalState> {\n    state: IEditPermissionsModalState = {\n        permissions: [],\n        users: [],\n        errorMessage: \"\",\n        selectedUser: { id: -1, name: '', userType: ENUMUserType.Normal },\n        selectedPermissionType: ENUMPermissionType.View,\n        showErrorMessage: false\n    }\n\n    getModalStyle = () => {\n\n        return {\n            top: `30%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        };\n    }\n\n    getPermissions = async () => {\n        if (this.props.entity) {\n            const response = await PermissionsLogic.getPermissions(this.props.entity);\n\n            if (response.message) {\n                this.setState({ errorMessage: response.message, showErrorMessage: true });\n            } else if (response.data) {\n                this.setState({ permissions: response.data })\n                this.setState({ users: this.state.users.filter(this.userExistsInPermissions(response.data)) })\n            }\n        }\n    }\n\n    getUsers = async () => {\n        const response = await PermissionsLogic.getUsers();\n\n        if (response.message) {\n            this.setState({ errorMessage: response.message, showErrorMessage: true });\n        } else if (response.data) {\n            this.setState({ users: response.data.filter(this.userExistsInPermissions(this.state.permissions)) })\n        }\n    }\n\n    userExistsInPermissions = (permissions: Permission[]) => (user: User) => {\n        return (!permissions || permissions.findIndex(permission => permission.user.id === user.id) < 0)\n            && user.id !== UserService.getCurrentUser()?.id\n    }\n\n    permissionTypeText = {\n        [ENUMPermissionType.Edit]: 'Edit',\n        [ENUMPermissionType.View]: 'View'\n    }\n\n    componentDidMount() {\n        this.getPermissions();\n        this.getUsers();\n    }\n\n    handleUserChange = (event: any) => {\n        const user = this.state.users.find(user => user.id === event.target.value) || null;\n        this.setState({ selectedUser: user })\n    }\n    handlePermChange = (event: any) => {\n        this.setState({ selectedPermissionType: event.target.value })\n    }\n\n    handleDelete = (permission: Permission) => async (event: any) => {\n        const message = await PermissionsLogic.DeletePermission(permission)\n\n        if (message) {\n            this.setState({ errorMessage: message, showErrorMessage: true });\n        } else {\n            this.getPermissions();\n        }\n    }\n\n    handleEdit = (permission: Permission) => async (event: any) => {\n        const message = await PermissionsLogic.EditPermission(permission)\n\n        if (message) {\n            this.setState({ errorMessage: message, showErrorMessage: true });\n        } else {\n            this.getPermissions();\n        }\n    }\n\n    handleAdd = async (event: any) => {\n        if (this.props.entity && this.state.selectedUser && this.state.selectedUser.id != -1) {\n            const message = await PermissionsLogic.AddPermission(this.state.selectedUser, this.props.entity, this.state.selectedPermissionType);\n\n            if (message) {\n                this.setState({ errorMessage: message, showErrorMessage: true });\n            } else {\n                this.getPermissions();\n            }\n        }\n    }\n\n    handleClickCloseError = () => {\n        this.setState({ ...this.state, showErrorMessage: false, errorMessage: '' })\n    }\n\n    render() {\n        const { entity, classes } = this.props;\n        const { permissions, selectedUser, selectedPermissionType, users, showErrorMessage, errorMessage } = this.state;\n\n        return (\n            <div style={{ ...(this.getModalStyle()), position: 'absolute' }}>\n                {showErrorMessage &&\n                    <Paper className={classes.errorPaper}>\n                        <Typography variant=\"body2\" className={classes.errorText}>{errorMessage}\n                            <IconButton\n                                onClick={this.handleClickCloseError}\n                                aria-label=\"close error message\"\n                                edge=\"end\"\n                            >\n                                <Clear />\n                            </IconButton>\n                        </Typography>\n                    </Paper>\n                }\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Username</TableCell>\n                                <TableCell >Permission</TableCell>\n                                <TableCell >Delete</TableCell>\n                                <TableCell >Toggle Edit/View</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {permissions && permissions.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.user.name}\n                                    </TableCell>\n                                    <TableCell >{this.permissionTypeText[row.permissionType]}</TableCell>\n                                    <TableCell >\n                                        <IconButton color=\"primary\" aria-label=\"delete\" component=\"span\">\n                                            <Delete onClick={this.handleDelete(row)} />\n                                        </IconButton>\n                                    </TableCell>\n                                    <TableCell >\n                                        <IconButton color=\"primary\" aria-label=\"edit\" component=\"span\">\n                                            <Edit onClick={this.handleEdit(row)} />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {selectedUser && <TableRow>\n                                <TableCell>\n                                    <Select\n                                        labelId=\"userselect\"\n                                        id=\"userselect\"\n                                        value={selectedUser.id}\n                                        onChange={this.handleUserChange}\n                                    >\n                                        {users && users.map(user => (\n                                            <MenuItem value={user.id}>\n                                                <em>{user.name}</em>\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </TableCell>\n                                <TableCell>\n                                    <Select labelId=\"permselect\"\n                                        id=\"permselect\"\n                                        value={selectedPermissionType}\n                                        onChange={this.handlePermChange}>\n                                        <MenuItem value={ENUMPermissionType.View}>\n                                            {this.permissionTypeText[ENUMPermissionType.View]}\n                                        </MenuItem>\n                                        <MenuItem value={ENUMPermissionType.Edit}>\n                                            {this.permissionTypeText[ENUMPermissionType.Edit]}\n                                        </MenuItem>\n                                    </Select>\n                                </TableCell>\n                                <TableCell>\n                                    <IconButton color=\"primary\" aria-label=\"add\" component=\"span\">\n                                        <Add onClick={this.handleAdd} />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </ div>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(EditPermissionsModal)\n","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenu.tsx",["148","149"],"import { ContextMenu, MenuItem, connectMenu, ConnectMenuProps } from \"react-contextmenu\";\nimport React from 'react';\nimport { Theme, withStyles } from \"@material-ui/core\";\nimport { UserService } from \"../../../login/logic/user-service\";\nimport { ENUMModalType } from '../../../enums/ENUMModalType';\nimport { IOpenModalParams } from \"../../interfaces/modal-interafaces\";\nimport './cotext.css'\nimport { ITreeEntity } from \"../../interfaces/ITreeEntity\";\nimport { duplicateFile } from \"../../api/tree-api\";\n\ninterface ITreeContextMenuState { }\n\nconst styles = (theme: Theme) => ({\n\n});\n\n\nclass ConnectedMenu extends React.Component<ConnectMenuProps, ITreeContextMenuState> {\n    handleClick = (event: any, data: IOpenModalParams) => {\n        this.props.trigger.openModal(data);\n    }\n\n    handleDuplicate = (event: any, data: { entity: ITreeEntity }) => {\n        this.props.trigger.handleDuplicate(data.entity);\n    }\n\n    render() {\n        const { trigger } = this.props;\n        const user = UserService.getCurrentUser();\n\n        return (\n            <ContextMenu id=\"context-menu\">\n                {trigger && user && trigger.entity?.owner?.id === user.id &&\n                <>\n                    < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.EditPermissions }} onClick={this.handleClick}>\n                        Edit Permissions\n                    </MenuItem>\n                    < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.Delete }} onClick={this.handleClick}>\n                    Delete\n                </MenuItem>\n                < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.Rename }} onClick={this.handleClick}>\n                    Rename\n                </MenuItem>\n                </>\n                }\n                {trigger && trigger.entity &&\n                    < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.Details }} onClick={this.handleClick}>\n                        Details\n                    </MenuItem>\n                }\n                {trigger && trigger.entity && trigger.entity.file &&\n                    < MenuItem data={{ entity: trigger.entity }} onClick={this.handleDuplicate}>\n                        Duplicate\n                    </MenuItem>\n                }\n            </ContextMenu>\n        )\n    }\n}\n\nconst TreeContextMenu = connectMenu(\"context-menu\")(ConnectedMenu);\n\n\nexport default TreeContextMenu\n","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/api/login-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMExceptionCodes.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/appConfig.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/api/axios-request.ts",["150","151"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMPermissionType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMUserType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenuTrigger.tsx",["152"],"import TreeContextMenu from \"./TreeContextMenu\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport React from 'react';\n\n\nexport const TreeContextMenuTrigger = (props: any) => {\n    return React.createElement(ContextMenuTrigger, props)\n} ","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-logic.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/consts/base-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/log/logger.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/permissions-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/CurrentTreeEntity.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/AddTreeEntity.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/helpers/tree-helpers.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/errors/ErrorContext.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/DeleteEntityModal.tsx",["153"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/ValidationPopUp.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/RenameEntityModal.tsx",["154"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/DetailsModal.tsx",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":108,"column":29,"nodeType":"161","endLine":108,"endColumn":72},{"ruleId":"162","severity":1,"message":"163","line":129,"column":88,"nodeType":"164","messageId":"165","endLine":129,"endColumn":90},{"ruleId":"166","severity":1,"message":"167","line":145,"column":17,"nodeType":"168","messageId":"169","endLine":145,"endColumn":23},{"ruleId":"166","severity":1,"message":"170","line":3,"column":17,"nodeType":"168","messageId":"169","endLine":3,"endColumn":27},{"ruleId":"166","severity":1,"message":"171","line":11,"column":7,"nodeType":"168","messageId":"169","endLine":11,"endColumn":13},{"ruleId":"166","severity":1,"message":"172","line":61,"column":32,"nodeType":"168","messageId":"169","endLine":61,"endColumn":42},{"ruleId":"166","severity":1,"message":"173","line":61,"column":44,"nodeType":"168","messageId":"169","endLine":61,"endColumn":49},{"ruleId":"166","severity":1,"message":"174","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":10,"column":68,"nodeType":"164","messageId":"165","endLine":10,"endColumn":70},{"ruleId":"175","severity":1,"message":"176","line":3,"column":47,"nodeType":"177","messageId":"178","endLine":3,"endColumn":48,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'entity' is assigned a value but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'styles' is assigned a value but never used.","'TUrlParams' is defined but never used.","'TData' is defined but never used.","'TreeContextMenu' is defined but never used.","no-useless-escape","Unnecessary escape character: \\p.","Literal","unnecessaryEscape",["182","183"],"no-global-assign","no-unsafe-negation",{"messageId":"184","fix":"185","desc":"186"},{"messageId":"187","fix":"188","desc":"189"},"removeEscape",{"range":"190","text":"191"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"192","text":"193"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[134,135],"",[134,134],"\\"]