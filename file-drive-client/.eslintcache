[{"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\index.tsx":"1","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\reportWebVitals.ts":"2","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\App.tsx":"3","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\errors\\ErrorContext.tsx":"4","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMExceptionCodes.ts":"5","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\user-service.ts":"6","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-error-messages.ts":"7","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\FilesTree.tsx":"8","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\Login.tsx":"9","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\SignUp.tsx":"10","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\consts\\base-error-messages.ts":"11","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMModalType.ts":"12","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-logic.ts":"13","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\tree-api.ts":"14","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\helpers\\tree-helpers.ts":"15","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenu.tsx":"16","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\SideTree.tsx":"17","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\CurrentTreeEntity.tsx":"18","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\EditPermissionsModal.tsx":"19","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\api\\login-api.ts":"20","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\appConfig.ts":"21","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMUserType.ts":"22","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMPermissionType.ts":"23","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenuTrigger.tsx":"24","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\api\\axios-request.ts":"25","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\AddTreeEntity.tsx":"26","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-logic.ts":"27","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\log\\logger.ts":"28","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\permissions-api.ts":"29","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-error-messages.ts":"30","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\DetailsModal.tsx":"31"},{"size":639,"mtime":1614100537729,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1269,"mtime":1614100537713,"results":"35","hashOfConfig":"33"},{"size":1922,"mtime":1614100537716,"results":"36","hashOfConfig":"33"},{"size":226,"mtime":1614242907826,"results":"37","hashOfConfig":"33"},{"size":450,"mtime":1614100537734,"results":"38","hashOfConfig":"33"},{"size":610,"mtime":1610564092143,"results":"39","hashOfConfig":"33"},{"size":5144,"mtime":1614249810893,"results":"40","hashOfConfig":"33"},{"size":9088,"mtime":1614100537732,"results":"41","hashOfConfig":"33"},{"size":11270,"mtime":1610475365581,"results":"42","hashOfConfig":"33"},{"size":314,"mtime":1609776430516,"results":"43","hashOfConfig":"33"},{"size":65,"mtime":1614242024579,"results":"44","hashOfConfig":"33"},{"size":2838,"mtime":1614245728909,"results":"45","hashOfConfig":"33"},{"size":1472,"mtime":1614245826746,"results":"46","hashOfConfig":"33"},{"size":370,"mtime":1614100537725,"results":"47","hashOfConfig":"33"},{"size":2074,"mtime":1614246462429,"results":"48","hashOfConfig":"33"},{"size":2141,"mtime":1614246377621,"results":"49","hashOfConfig":"33"},{"size":2042,"mtime":1614250269015,"results":"50","hashOfConfig":"33"},{"size":10125,"mtime":1614242024587,"results":"51","hashOfConfig":"33"},{"size":1301,"mtime":1614100537730,"results":"52","hashOfConfig":"33"},{"size":68,"mtime":1609776430515,"results":"53","hashOfConfig":"33"},{"size":53,"mtime":1609776430518,"results":"54","hashOfConfig":"33"},{"size":56,"mtime":1614100537715,"results":"55","hashOfConfig":"33"},{"size":257,"mtime":1614100537722,"results":"56","hashOfConfig":"33"},{"size":2299,"mtime":1614100537738,"results":"57","hashOfConfig":"33"},{"size":1567,"mtime":1614100537718,"results":"58","hashOfConfig":"33"},{"size":3273,"mtime":1614100537728,"results":"59","hashOfConfig":"33"},{"size":415,"mtime":1609776430531,"results":"60","hashOfConfig":"33"},{"size":2239,"mtime":1614100537716,"results":"61","hashOfConfig":"33"},{"size":142,"mtime":1614100537727,"results":"62","hashOfConfig":"33"},{"size":2412,"mtime":1614242024585,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"146mvbs",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\index.tsx",[],["129","130"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\reportWebVitals.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\App.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\errors\\ErrorContext.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMExceptionCodes.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\user-service.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-error-messages.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\FilesTree.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\Login.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\SignUp.tsx",["131"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport { Typography, InputAdornment, IconButton, OutlinedInput, InputLabel, FormControl, Button, fade } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, Clear } from '@material-ui/icons/';\r\nimport logo from '../../logo.svg'\r\nimport { LoginLogic } from '../logic/login-logic';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\ntype ISignUpProps = RouteComponentProps & {\r\n    classes: ClassNameMap,\r\n    history: any\r\n}\r\ninterface ISignUpState {\r\n    password: string,\r\n    confirmPassword: string,\r\n    name: string,\r\n    showPassword: boolean,\r\n    showConfirmPassword: boolean,\r\n    errorMessage: string,\r\n    showErrorMessage: boolean\r\n}\r\n\r\nconst styles = (theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        padding: theme.spacing(0, 3),\r\n    },\r\n    container: {\r\n        maxWidth: 400,\r\n        margin: `${theme.spacing(1)}px auto`,\r\n    },\r\n    loginPaper: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    newAccountPaper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    signUpButton: {\r\n        backgroundColor: '#2c974b',\r\n        color: '#ffffff',\r\n        width: '100%'\r\n    },\r\n    logo: {\r\n        height: 48,\r\n        width: 48,\r\n        color: '#586069'\r\n    },\r\n    errorPaper: {\r\n        backgroundColor: fade('#cb2431', 0.5),\r\n        padding: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass SignUp extends React.Component<ISignUpProps, ISignUpState> {\r\n    state: ISignUpState = {\r\n        password: '',\r\n        confirmPassword: '',\r\n        name: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        errorMessage: '',\r\n        showErrorMessage: false\r\n    }\r\n\r\n    handleClickShowPassword = (prop: 'showPassword' | 'showConfirmPassword') => () => {\r\n        this.setState({ ...this.state, [prop]: !this.state[prop] });\r\n    };\r\n\r\n    handleMouseDownPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    handleChange = (prop: string) => (event: any) => {\r\n        this.setState({ ...this.state, [prop]: event.target.value });\r\n    };\r\n\r\n    handleSignUp = async () => {\r\n        const { name, password, confirmPassword } = this.state;\r\n\r\n        const message = await LoginLogic.signUp(name, password, confirmPassword);\r\n\r\n        if (message) {\r\n            this.setState({ ...this.state, showErrorMessage: true, errorMessage: message, password: '', confirmPassword: '' });\r\n        } else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    handleClickCloseError = () => {\r\n        this.setState({ ...this.state, showErrorMessage: false, errorMessage: '' })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { password, confirmPassword, showPassword, showConfirmPassword, name, showErrorMessage, errorMessage } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" spacing={3} className={classes.container}>\r\n                        <Grid item>\r\n                            <img src={logo} className={classes.logo} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\">Sign Up to FileDrive</Typography>\r\n\r\n                        </Grid>\r\n                        {showErrorMessage &&\r\n                            <Grid item>\r\n                                <Paper className={classes.errorPaper}>\r\n                                    <Typography variant=\"body2\" className={classes.errorText}>{errorMessage}\r\n                                        <IconButton\r\n                                            onClick={this.handleClickCloseError}\r\n                                            onMouseDown={this.handleMouseDownPassword}\r\n                                            aria-label=\"close error message\"\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            <Clear />\r\n                                        </IconButton>\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        }\r\n                        <Grid item>\r\n                            <Paper className={classes.loginPaper}>\r\n                                <Grid container direction=\"column\" spacing={3}>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n\r\n                                                    <InputLabel htmlFor=\"username-input\">Username</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('name')}\r\n                                                        label=\"Username\"\r\n                                                        id=\"username-input\"\r\n                                                        value={name}\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n                                                    <InputLabel htmlFor=\"password-input\">Password</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('password')}\r\n                                                        label=\"Password\"\r\n                                                        id=\"password-input\"\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n                                                        value={password}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    onClick={this.handleClickShowPassword('showPassword')}\r\n                                                                    onMouseDown={this.handleMouseDownPassword}\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n                                                    <InputLabel htmlFor=\"confirm-password-input\">Confrim password</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('confirmPassword')}\r\n                                                        label=\"Confirm password\"\r\n                                                        id=\"confirm-password-input\"\r\n                                                        type={showConfirmPassword ? 'text' : 'password'}\r\n                                                        value={confirmPassword}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    onClick={this.handleClickShowPassword('showConfirmPassword')}\r\n                                                                    onMouseDown={this.handleMouseDownPassword}\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            className={classes.signUpButton}\r\n                                            variant=\"contained\"\r\n                                            disableRipple\r\n                                            onClick={this.handleSignUp}\r\n                                        >Sign up</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles, { withTheme: true })(SignUp));\r\n","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\consts\\base-error-messages.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMModalType.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-logic.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\tree-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\helpers\\tree-helpers.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenu.tsx",["132","133","134"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\SideTree.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\CurrentTreeEntity.tsx",["135"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\EditPermissionsModal.tsx",["136","137","138"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\api\\login-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\appConfig.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMUserType.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMPermissionType.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenuTrigger.tsx",["139"],"import TreeContextMenu from \"./TreeContextMenu\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport React from 'react';\r\n\r\n\r\nexport const TreeContextMenuTrigger = (props: any) => {\r\n    return React.createElement(ContextMenuTrigger, props)\r\n} ","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\api\\axios-request.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\AddTreeEntity.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-logic.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\log\\logger.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\permissions-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-error-messages.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\DetailsModal.tsx",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":108,"column":29,"nodeType":"146","endLine":108,"endColumn":72},{"ruleId":"147","severity":1,"message":"148","line":3,"column":17,"nodeType":"149","messageId":"150","endLine":3,"endColumn":27},{"ruleId":"147","severity":1,"message":"151","line":9,"column":10,"nodeType":"149","messageId":"150","endLine":9,"endColumn":23},{"ruleId":"147","severity":1,"message":"152","line":13,"column":7,"nodeType":"149","messageId":"150","endLine":13,"endColumn":13},{"ruleId":"147","severity":1,"message":"153","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"154","line":5,"column":10,"nodeType":"149","messageId":"150","endLine":5,"endColumn":21},{"ruleId":"155","severity":1,"message":"156","line":127,"column":88,"nodeType":"157","messageId":"158","endLine":127,"endColumn":90},{"ruleId":"147","severity":1,"message":"159","line":143,"column":17,"nodeType":"149","messageId":"150","endLine":143,"endColumn":23},{"ruleId":"147","severity":1,"message":"160","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":23},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'withStyles' is defined but never used.","Identifier","unusedVar","'duplicateFile' is defined but never used.","'styles' is assigned a value but never used.","'useState' is defined but never used.","'ITreeEntity' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'entity' is assigned a value but never used.","'TreeContextMenu' is defined but never used.","no-global-assign","no-unsafe-negation"]