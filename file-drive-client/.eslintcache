[{"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\index.tsx":"1","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\reportWebVitals.ts":"2","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\App.tsx":"3","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\Login.tsx":"4","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\tree-api.ts":"5","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-logic.ts":"6","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\SideTree.tsx":"7","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\appConfig.ts":"8","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-error-messages.ts":"9","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\api\\axios-request.ts":"10","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMExceptionCodes.ts":"11","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\api\\login-api.ts":"12","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\consts\\base-error-messages.ts":"13","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\log\\logger.ts":"14","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\SignUp.tsx":"15","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\user-service.ts":"16","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\FilesTree.tsx":"17","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMModalType.ts":"18","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\EditPermissionsModal.tsx":"19","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenu.tsx":"20","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenuTrigger.tsx":"21","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-logic.ts":"22","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\permissions-api.ts":"23","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-error-messages.ts":"24","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMPermissionType.ts":"25","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMUserType.ts":"26"},{"size":500,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":907,"mtime":1610632324322,"results":"30","hashOfConfig":"28"},{"size":9088,"mtime":1610649693912,"results":"31","hashOfConfig":"28"},{"size":381,"mtime":1610386193241,"results":"32","hashOfConfig":"28"},{"size":2874,"mtime":1610634049892,"results":"33","hashOfConfig":"28"},{"size":1838,"mtime":1610638598262,"results":"34","hashOfConfig":"28"},{"size":68,"mtime":1609776430515,"results":"35","hashOfConfig":"28"},{"size":610,"mtime":1610564092143,"results":"36","hashOfConfig":"28"},{"size":2207,"mtime":1609776430528,"results":"37","hashOfConfig":"28"},{"size":202,"mtime":1610650269111,"results":"38","hashOfConfig":"28"},{"size":1301,"mtime":1610633919700,"results":"39","hashOfConfig":"28"},{"size":314,"mtime":1609776430516,"results":"40","hashOfConfig":"28"},{"size":415,"mtime":1609776430531,"results":"41","hashOfConfig":"28"},{"size":11270,"mtime":1610475365581,"results":"42","hashOfConfig":"28"},{"size":450,"mtime":1610634168812,"results":"43","hashOfConfig":"28"},{"size":2603,"mtime":1610641761715,"results":"44","hashOfConfig":"28"},{"size":51,"mtime":1610635976277,"results":"45","hashOfConfig":"28"},{"size":10192,"mtime":1610650114245,"results":"46","hashOfConfig":"28"},{"size":1327,"mtime":1610640590500,"results":"47","hashOfConfig":"28"},{"size":257,"mtime":1610637553264,"results":"48","hashOfConfig":"28"},{"size":3273,"mtime":1610648779808,"results":"49","hashOfConfig":"28"},{"size":2239,"mtime":1610647941503,"results":"50","hashOfConfig":"28"},{"size":214,"mtime":1610642919543,"results":"51","hashOfConfig":"28"},{"size":56,"mtime":1610642519253,"results":"52","hashOfConfig":"28"},{"size":53,"mtime":1609776430518,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"146mvbs",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\index.tsx",[],["113","114"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\reportWebVitals.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\App.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\Login.tsx",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\tree-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-logic.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\SideTree.tsx",["115"],"import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { ITreeEntity } from '../interfaces/ITreeEntity';\r\nimport { TreeItem, TreeView } from '@material-ui/lab';\r\nimport { Folder } from '@material-ui/icons';\r\nimport { TreeContextMenuTrigger } from './contextMenu/TreeContextMenuTrigger';\r\nimport { IOpenModalParams } from '../interfaces/modal-interafaces';\r\n\r\n\r\n\r\ninterface ISideTreeProps {\r\n    tree: ITreeEntity[] | null,\r\n    openModal: (params: IOpenModalParams) => void\r\n}\r\ninterface ISideTreeState {\r\n    password: string,\r\n    name: string,\r\n    showPassword: boolean\r\n    errorMessage: string,\r\n    showErrorMessage: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nconst collect = (props: any) => {\r\n    return props\r\n}\r\n\r\nconst SideTree = (props: ISideTreeProps) => {\r\n    const { tree, openModal } = props\r\n    const classes = useStyles()\r\n    const buildTree = (currentTreeEntity: ITreeEntity) => {\r\n        if (currentTreeEntity)\r\n            return (\r\n                <TreeContextMenuTrigger id=\"context-menu\" collect={collect} entity={currentTreeEntity} openModal={openModal}>\r\n                    <TreeItem nodeId={currentTreeEntity.id.toString()} label={currentTreeEntity.name} icon={/* check if folder or file */<Folder />}>\r\n                        {\r\n                            currentTreeEntity.children && currentTreeEntity.children.map(child => buildTree(child))\r\n                        }\r\n                    </TreeItem>\r\n                </TreeContextMenuTrigger>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <TreeView classes={{ root: classes.root }}>\r\n            {\r\n                tree?.map(child => buildTree(child))\r\n            }\r\n        </TreeView>\r\n    )\r\n}\r\n\r\nexport default SideTree;\r\n","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\appConfig.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\login-error-messages.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\api\\axios-request.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMExceptionCodes.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\api\\login-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\consts\\base-error-messages.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\utils\\log\\logger.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\components\\SignUp.tsx",["116"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport { Typography, InputAdornment, IconButton, OutlinedInput, InputLabel, FormControl, Button, fade } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, Clear } from '@material-ui/icons/';\r\nimport logo from '../../logo.svg'\r\nimport { LoginLogic } from '../logic/login-logic';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\ntype ISignUpProps = RouteComponentProps & {\r\n    classes: ClassNameMap,\r\n    history: any\r\n}\r\ninterface ISignUpState {\r\n    password: string,\r\n    confirmPassword: string,\r\n    name: string,\r\n    showPassword: boolean,\r\n    showConfirmPassword: boolean,\r\n    errorMessage: string,\r\n    showErrorMessage: boolean\r\n}\r\n\r\nconst styles = (theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden',\r\n        padding: theme.spacing(0, 3),\r\n    },\r\n    container: {\r\n        maxWidth: 400,\r\n        margin: `${theme.spacing(1)}px auto`,\r\n    },\r\n    loginPaper: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    newAccountPaper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    signUpButton: {\r\n        backgroundColor: '#2c974b',\r\n        color: '#ffffff',\r\n        width: '100%'\r\n    },\r\n    logo: {\r\n        height: 48,\r\n        width: 48,\r\n        color: '#586069'\r\n    },\r\n    errorPaper: {\r\n        backgroundColor: fade('#cb2431', 0.5),\r\n        padding: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass SignUp extends React.Component<ISignUpProps, ISignUpState> {\r\n    state: ISignUpState = {\r\n        password: '',\r\n        confirmPassword: '',\r\n        name: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        errorMessage: '',\r\n        showErrorMessage: false\r\n    }\r\n\r\n    handleClickShowPassword = (prop: 'showPassword' | 'showConfirmPassword') => () => {\r\n        this.setState({ ...this.state, [prop]: !this.state[prop] });\r\n    };\r\n\r\n    handleMouseDownPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    handleChange = (prop: string) => (event: any) => {\r\n        this.setState({ ...this.state, [prop]: event.target.value });\r\n    };\r\n\r\n    handleSignUp = async () => {\r\n        const { name, password, confirmPassword } = this.state;\r\n\r\n        const message = await LoginLogic.signUp(name, password, confirmPassword);\r\n\r\n        if (message) {\r\n            this.setState({ ...this.state, showErrorMessage: true, errorMessage: message, password: '', confirmPassword: '' });\r\n        } else {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    handleClickCloseError = () => {\r\n        this.setState({ ...this.state, showErrorMessage: false, errorMessage: '' })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { password, confirmPassword, showPassword, showConfirmPassword, name, showErrorMessage, errorMessage } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.root}>\r\n                    <Grid container direction=\"column\" spacing={3} className={classes.container}>\r\n                        <Grid item>\r\n                            <img src={logo} className={classes.logo} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h6\">Sign Up to FileDrive</Typography>\r\n\r\n                        </Grid>\r\n                        {showErrorMessage &&\r\n                            <Grid item>\r\n                                <Paper className={classes.errorPaper}>\r\n                                    <Typography variant=\"body2\" className={classes.errorText}>{errorMessage}\r\n                                        <IconButton\r\n                                            onClick={this.handleClickCloseError}\r\n                                            onMouseDown={this.handleMouseDownPassword}\r\n                                            aria-label=\"close error message\"\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            <Clear />\r\n                                        </IconButton>\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        }\r\n                        <Grid item>\r\n                            <Paper className={classes.loginPaper}>\r\n                                <Grid container direction=\"column\" spacing={3}>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n\r\n                                                    <InputLabel htmlFor=\"username-input\">Username</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('name')}\r\n                                                        label=\"Username\"\r\n                                                        id=\"username-input\"\r\n                                                        value={name}\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n                                                    <InputLabel htmlFor=\"password-input\">Password</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('password')}\r\n                                                        label=\"Password\"\r\n                                                        id=\"password-input\"\r\n                                                        type={showPassword ? 'text' : 'password'}\r\n                                                        value={password}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    onClick={this.handleClickShowPassword('showPassword')}\r\n                                                                    onMouseDown={this.handleMouseDownPassword}\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\r\n                                            <Grid item>\r\n                                                <FormControl fullWidth variant=\"outlined\">\r\n                                                    <InputLabel htmlFor=\"confirm-password-input\">Confrim password</InputLabel>\r\n                                                    <OutlinedInput\r\n                                                        fullWidth\r\n                                                        onChange={this.handleChange('confirmPassword')}\r\n                                                        label=\"Confirm password\"\r\n                                                        id=\"confirm-password-input\"\r\n                                                        type={showConfirmPassword ? 'text' : 'password'}\r\n                                                        value={confirmPassword}\r\n                                                        endAdornment={\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    onClick={this.handleClickShowPassword('showConfirmPassword')}\r\n                                                                    onMouseDown={this.handleMouseDownPassword}\r\n                                                                    aria-label=\"toggle password visibility\"\r\n                                                                    edge=\"end\"\r\n                                                                >\r\n                                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                        }\r\n                                                    />\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            className={classes.signUpButton}\r\n                                            variant=\"contained\"\r\n                                            disableRipple\r\n                                            onClick={this.handleSignUp}\r\n                                        >Sign up</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles, { withTheme: true })(SignUp));\r\n","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\login\\logic\\user-service.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\FilesTree.tsx",["117"],"import React, { useEffect, useState } from 'react';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\r\nimport { getTree } from '../api/tree-api';\r\nimport { ITreeEntity } from '../interfaces/ITreeEntity';\r\nimport { Grid, Typography, Modal } from '@material-ui/core';\r\nimport SideTree from './SideTree';\r\nimport { ENUMModalType } from '../../enums/ENUMModalType';\r\nimport EditPermissionsModal from './modals/EditPermissionsModal';\r\nimport { IOpenModalParams } from '../interfaces/modal-interafaces';\r\nimport TreeContextMenu from './contextMenu/TreeContextMenu';\r\n\r\n\r\ninterface IFilesTreeProps {\r\n    classes: ClassNameMap\r\n}\r\ninterface IFilesTreeState {\r\n    password: string,\r\n    name: string,\r\n    showPassword: boolean,\r\n    errorMessage: string,\r\n    showErrorMessage: boolean\r\n}\r\n\r\nconst styles = (theme: Theme) => ({\r\n\r\n});\r\n\r\nconst ModalTypes = {\r\n    [ENUMModalType.EditPermissions]: EditPermissionsModal\r\n}\r\n\r\nconst FilesTree = (props: IFilesTreeProps) => {\r\n\r\n    const [tree, setTree] = useState<ITreeEntity[] | null>(null);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [modalBody, setModalBody] = useState<ENUMModalType>(ENUMModalType.EditPermissions);\r\n    const [modalEntity, setModalEntity] = useState<ITreeEntity | null>(null);\r\n\r\n    const handleOpen = ({ entity, modalType }: IOpenModalParams) => {\r\n        setModalBody(modalType);\r\n        setModalEntity(entity);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTree().then((data) => {\r\n            setTree(data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography variant={'h1'}>\r\n                        {'עץ תיקיות'}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid xs={3}>\r\n                        <SideTree tree={tree} openModal={handleOpen} />\r\n                    </Grid>\r\n                    <Grid xs={9}>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                {React.createElement(ModalTypes[modalBody], { entity: modalEntity, closeModal: handleClose })}\r\n            </Modal>\r\n            <TreeContextMenu />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(FilesTree);\r\n","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMModalType.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\modals\\EditPermissionsModal.tsx",["118","119","120"],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenu.tsx",["121","122"],"import { ContextMenu, MenuItem, connectMenu, ConnectMenuProps } from \"react-contextmenu\";\r\nimport React from 'react';\r\nimport { Theme, withStyles } from \"@material-ui/core\";\r\nimport { UserService } from \"../../../login/logic/user-service\";\r\nimport { ENUMModalType } from '../../../enums/ENUMModalType';\r\nimport { IOpenModalParams } from \"../../interfaces/modal-interafaces\";\r\nimport './cotext.css'\r\n\r\ninterface ITreeContextMenuState { }\r\n\r\nconst styles = (theme: Theme) => ({\r\n\r\n});\r\n\r\n\r\nclass ConnectedMenu extends React.Component<ConnectMenuProps, ITreeContextMenuState> {\r\n    handleClick = (event: any, data: IOpenModalParams) => {\r\n        this.props.trigger.openModal(data);\r\n    }\r\n\r\n    render() {\r\n        const { trigger } = this.props;\r\n        const user = UserService.getCurrentUser();\r\n\r\n        return (\r\n            <ContextMenu id=\"context-menu\">\r\n                {trigger && user && trigger.entity.owner.id === user.id &&\r\n                    < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.EditPermissions }} onClick={this.handleClick}>\r\n                        Edit Permissions\r\n                    </MenuItem>\r\n                }\r\n            </ContextMenu>\r\n        )\r\n    }\r\n}\r\n\r\nconst TreeContextMenu = connectMenu(\"context-menu\")(ConnectedMenu);\r\n\r\n\r\nexport default TreeContextMenu\r\n","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\components\\contextMenu\\TreeContextMenuTrigger.tsx",["123"],"import TreeContextMenu from \"./TreeContextMenu\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport React from 'react';\r\n\r\n\r\nexport const TreeContextMenuTrigger = (props: any) => {\r\n    return React.createElement(ContextMenuTrigger, props)\r\n} ","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-logic.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\api\\permissions-api.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\files-tree\\logic\\permissions-error-messages.ts",["124"],"import { baseErrorMessage } from './../../consts/base-error-messages';\r\nimport { ENUMExceptionCodes } from './../../enums/ENUMExceptionCodes';\r\n\r\nexport const permissionsErrorMessage = {\r\n    ...baseErrorMessage\r\n}","C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMPermissionType.ts",[],"C:\\GitProjects\\FileDrive\\file-drive-client\\src\\enums\\ENUMUserType.ts",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":15,"column":11,"nodeType":"131","messageId":"132","endLine":15,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":108,"column":29,"nodeType":"135","endLine":108,"endColumn":72},{"ruleId":"129","severity":1,"message":"136","line":17,"column":11,"nodeType":"131","messageId":"132","endLine":17,"endColumn":26},{"ruleId":"129","severity":1,"message":"137","line":2,"column":144,"nodeType":"131","messageId":"132","endLine":2,"endColumn":148},{"ruleId":"138","severity":1,"message":"139","line":129,"column":88,"nodeType":"140","messageId":"141","endLine":129,"endColumn":90},{"ruleId":"129","severity":1,"message":"142","line":145,"column":17,"nodeType":"131","messageId":"132","endLine":145,"endColumn":23},{"ruleId":"129","severity":1,"message":"143","line":3,"column":17,"nodeType":"131","messageId":"132","endLine":3,"endColumn":27},{"ruleId":"129","severity":1,"message":"144","line":11,"column":7,"nodeType":"131","messageId":"132","endLine":11,"endColumn":13},{"ruleId":"129","severity":1,"message":"145","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":23},{"ruleId":"129","severity":1,"message":"146","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":28},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'ISideTreeState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IFilesTreeState' is defined but never used.","'fade' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'entity' is assigned a value but never used.","'withStyles' is defined but never used.","'styles' is assigned a value but never used.","'TreeContextMenu' is defined but never used.","'ENUMExceptionCodes' is defined but never used.","no-global-assign","no-unsafe-negation"]