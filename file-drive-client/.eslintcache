[{"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/index.tsx":"1","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/reportWebVitals.ts":"2","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/App.tsx":"3","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/user-service.ts":"4","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/SignUp.tsx":"5","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/Login.tsx":"6","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/FilesTree.tsx":"7","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-logic.ts":"8","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/tree-api.ts":"9","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMModalType.ts":"10","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/SideTree.tsx":"11","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/EditPermissionsModal.tsx":"12","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenu.tsx":"13","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-error-messages.ts":"14","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/api/login-api.ts":"15","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMExceptionCodes.ts":"16","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/appConfig.ts":"17","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/api/axios-request.ts":"18","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMPermissionType.ts":"19","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMUserType.ts":"20","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenuTrigger.tsx":"21","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-logic.ts":"22","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/consts/base-error-messages.ts":"23","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/log/logger.ts":"24","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/permissions-api.ts":"25","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-error-messages.ts":"26","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/CurrentTreeEntity.tsx":"27","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/AddTreeEntity.tsx":"28","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/helpers/tree-helpers.ts":"29","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/errors/ErrorContext.tsx":"30"},{"size":619,"mtime":1610824846452,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1609179351665,"results":"33","hashOfConfig":"32"},{"size":1222,"mtime":1610826185691,"results":"34","hashOfConfig":"32"},{"size":435,"mtime":1610705276033,"results":"35","hashOfConfig":"32"},{"size":11044,"mtime":1610705276032,"results":"36","hashOfConfig":"32"},{"size":8888,"mtime":1610705276032,"results":"37","hashOfConfig":"32"},{"size":4169,"mtime":1610826196093,"results":"38","hashOfConfig":"32"},{"size":2789,"mtime":1610705276033,"results":"39","hashOfConfig":"32"},{"size":1061,"mtime":1610824958484,"results":"40","hashOfConfig":"32"},{"size":49,"mtime":1610705276027,"results":"41","hashOfConfig":"32"},{"size":1980,"mtime":1610826150653,"results":"42","hashOfConfig":"32"},{"size":9951,"mtime":1610826132157,"results":"43","hashOfConfig":"32"},{"size":1287,"mtime":1610705276029,"results":"44","hashOfConfig":"32"},{"size":601,"mtime":1610705276032,"results":"45","hashOfConfig":"32"},{"size":1266,"mtime":1610705276031,"results":"46","hashOfConfig":"32"},{"size":194,"mtime":1610705276027,"results":"47","hashOfConfig":"32"},{"size":66,"mtime":1610125000319,"results":"48","hashOfConfig":"32"},{"size":2239,"mtime":1610720294901,"results":"49","hashOfConfig":"32"},{"size":53,"mtime":1610705276027,"results":"50","hashOfConfig":"32"},{"size":50,"mtime":1610125000320,"results":"51","hashOfConfig":"32"},{"size":250,"mtime":1610705276029,"results":"52","hashOfConfig":"32"},{"size":3173,"mtime":1610705276031,"results":"53","hashOfConfig":"32"},{"size":309,"mtime":1610125000320,"results":"54","hashOfConfig":"32"},{"size":401,"mtime":1610125000322,"results":"55","hashOfConfig":"32"},{"size":2185,"mtime":1610705276027,"results":"56","hashOfConfig":"32"},{"size":138,"mtime":1610826129140,"results":"57","hashOfConfig":"32"},{"size":1370,"mtime":1610817018973,"results":"58","hashOfConfig":"32"},{"size":1524,"mtime":1610817287250,"results":"59","hashOfConfig":"32"},{"size":360,"mtime":1610815280468,"results":"60","hashOfConfig":"32"},{"size":1872,"mtime":1610826174621,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jkf0l2",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/index.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/reportWebVitals.ts",[],["126","127"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/App.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/user-service.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/SignUp.tsx",["128"],"import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport { ClassNameMap } from '@material-ui/core/styles/withStyles';\nimport { Typography, InputAdornment, IconButton, OutlinedInput, InputLabel, FormControl, Button, fade } from '@material-ui/core';\nimport { Visibility, VisibilityOff, Clear } from '@material-ui/icons/';\nimport logo from '../../logo.svg'\nimport { LoginLogic } from '../logic/login-logic';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\n\n\ntype ISignUpProps = RouteComponentProps & {\n    classes: ClassNameMap,\n    history: any\n}\ninterface ISignUpState {\n    password: string,\n    confirmPassword: string,\n    name: string,\n    showPassword: boolean,\n    showConfirmPassword: boolean,\n    errorMessage: string,\n    showErrorMessage: boolean\n}\n\nconst styles = (theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n    container: {\n        maxWidth: 400,\n        margin: `${theme.spacing(1)}px auto`,\n    },\n    loginPaper: {\n        padding: theme.spacing(4),\n    },\n    newAccountPaper: {\n        padding: theme.spacing(2),\n    },\n    signUpButton: {\n        backgroundColor: '#2c974b',\n        color: '#ffffff',\n        width: '100%'\n    },\n    logo: {\n        height: 48,\n        width: 48,\n        color: '#586069'\n    },\n    errorPaper: {\n        backgroundColor: fade('#cb2431', 0.5),\n        padding: theme.spacing(1),\n    }\n});\n\nclass SignUp extends React.Component<ISignUpProps, ISignUpState> {\n    state: ISignUpState = {\n        password: '',\n        confirmPassword: '',\n        name: '',\n        showPassword: false,\n        showConfirmPassword: false,\n        errorMessage: '',\n        showErrorMessage: false\n    }\n\n    handleClickShowPassword = (prop: 'showPassword' | 'showConfirmPassword') => () => {\n        this.setState({ ...this.state, [prop]: !this.state[prop] });\n    };\n\n    handleMouseDownPassword = (event: any) => {\n        event.preventDefault();\n    };\n\n    handleChange = (prop: string) => (event: any) => {\n        this.setState({ ...this.state, [prop]: event.target.value });\n    };\n\n    handleSignUp = async () => {\n        const { name, password, confirmPassword } = this.state;\n\n        const message = await LoginLogic.signUp(name, password, confirmPassword);\n\n        if (message) {\n            this.setState({ ...this.state, showErrorMessage: true, errorMessage: message, password: '', confirmPassword: '' });\n        } else {\n            this.props.history.push('/login');\n        }\n    }\n\n    handleClickCloseError = () => {\n        this.setState({ ...this.state, showErrorMessage: false, errorMessage: '' })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { password, confirmPassword, showPassword, showConfirmPassword, name, showErrorMessage, errorMessage } = this.state;\n\n        return (\n            <div>\n                <div className={classes.root}>\n                    <Grid container direction=\"column\" spacing={3} className={classes.container}>\n                        <Grid item>\n                            <img src={logo} className={classes.logo} />\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"h6\">Sign Up to FileDrive</Typography>\n\n                        </Grid>\n                        {showErrorMessage &&\n                            <Grid item>\n                                <Paper className={classes.errorPaper}>\n                                    <Typography variant=\"body2\" className={classes.errorText}>{errorMessage}\n                                        <IconButton\n                                            onClick={this.handleClickCloseError}\n                                            onMouseDown={this.handleMouseDownPassword}\n                                            aria-label=\"close error message\"\n                                            edge=\"end\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </Typography>\n                                </Paper>\n                            </Grid>\n                        }\n                        <Grid item>\n                            <Paper className={classes.loginPaper}>\n                                <Grid container direction=\"column\" spacing={3}>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n\n                                                    <InputLabel htmlFor=\"username-input\">Username</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('name')}\n                                                        label=\"Username\"\n                                                        id=\"username-input\"\n                                                        value={name}\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n                                                    <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('password')}\n                                                        label=\"Password\"\n                                                        id=\"password-input\"\n                                                        type={showPassword ? 'text' : 'password'}\n                                                        value={password}\n                                                        endAdornment={\n                                                            <InputAdornment position=\"end\">\n                                                                <IconButton\n                                                                    onClick={this.handleClickShowPassword('showPassword')}\n                                                                    onMouseDown={this.handleMouseDownPassword}\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <FormControl fullWidth variant=\"outlined\">\n                                                    <InputLabel htmlFor=\"confirm-password-input\">Confrim password</InputLabel>\n                                                    <OutlinedInput\n                                                        fullWidth\n                                                        onChange={this.handleChange('confirmPassword')}\n                                                        label=\"Confirm password\"\n                                                        id=\"confirm-password-input\"\n                                                        type={showConfirmPassword ? 'text' : 'password'}\n                                                        value={confirmPassword}\n                                                        endAdornment={\n                                                            <InputAdornment position=\"end\">\n                                                                <IconButton\n                                                                    onClick={this.handleClickShowPassword('showConfirmPassword')}\n                                                                    onMouseDown={this.handleMouseDownPassword}\n                                                                    aria-label=\"toggle password visibility\"\n                                                                    edge=\"end\"\n                                                                >\n                                                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                                                                </IconButton>\n                                                            </InputAdornment>\n                                                        }\n                                                    />\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            className={classes.signUpButton}\n                                            variant=\"contained\"\n                                            disableRipple\n                                            onClick={this.handleSignUp}\n                                        >Sign up</Button>\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withStyles(styles, { withTheme: true })(SignUp));\n","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/components/Login.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/FilesTree.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-logic.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/tree-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMModalType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/SideTree.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/modals/EditPermissionsModal.tsx",["129","130"],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenu.tsx",["131","132"],"import { ContextMenu, MenuItem, connectMenu, ConnectMenuProps } from \"react-contextmenu\";\nimport React from 'react';\nimport { Theme, withStyles } from \"@material-ui/core\";\nimport { UserService } from \"../../../login/logic/user-service\";\nimport { ENUMModalType } from '../../../enums/ENUMModalType';\nimport { IOpenModalParams } from \"../../interfaces/modal-interafaces\";\nimport './cotext.css'\n\ninterface ITreeContextMenuState { }\n\nconst styles = (theme: Theme) => ({\n\n});\n\n\nclass ConnectedMenu extends React.Component<ConnectMenuProps, ITreeContextMenuState> {\n    handleClick = (event: any, data: IOpenModalParams) => {\n        this.props.trigger.openModal(data);\n    }\n\n    render() {\n        const { trigger } = this.props;\n        const user = UserService.getCurrentUser();\n\n        return (\n            <ContextMenu id=\"context-menu\">\n                {trigger && user && trigger.entity.owner.id === user.id &&\n                    < MenuItem data={{ entity: trigger.entity, modalType: ENUMModalType.EditPermissions }} onClick={this.handleClick}>\n                        Edit Permissions\n                    </MenuItem>\n                }\n            </ContextMenu>\n        )\n    }\n}\n\nconst TreeContextMenu = connectMenu(\"context-menu\")(ConnectedMenu);\n\n\nexport default TreeContextMenu\n","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/logic/login-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/login/api/login-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMExceptionCodes.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/appConfig.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/api/axios-request.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMPermissionType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/enums/ENUMUserType.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/contextMenu/TreeContextMenuTrigger.tsx",["133"],"import TreeContextMenu from \"./TreeContextMenu\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport React from 'react';\n\n\nexport const TreeContextMenuTrigger = (props: any) => {\n    return React.createElement(ContextMenuTrigger, props)\n} ","/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-logic.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/consts/base-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/utils/log/logger.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/api/permissions-api.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/logic/permissions-error-messages.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/CurrentTreeEntity.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/components/AddTreeEntity.tsx",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/files-tree/helpers/tree-helpers.ts",[],"/Users/korenzerah/Projects/FileDrive/file-drive-client/src/errors/ErrorContext.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":108,"column":29,"nodeType":"140","endLine":108,"endColumn":72},{"ruleId":"141","severity":1,"message":"142","line":129,"column":88,"nodeType":"143","messageId":"144","endLine":129,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":145,"column":17,"nodeType":"147","messageId":"148","endLine":145,"endColumn":23},{"ruleId":"145","severity":1,"message":"149","line":3,"column":17,"nodeType":"147","messageId":"148","endLine":3,"endColumn":27},{"ruleId":"145","severity":1,"message":"150","line":11,"column":7,"nodeType":"147","messageId":"148","endLine":11,"endColumn":13},{"ruleId":"145","severity":1,"message":"151","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":23},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'entity' is assigned a value but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'styles' is assigned a value but never used.","'TreeContextMenu' is defined but never used.","no-global-assign","no-unsafe-negation"]